from copy import deepcopy


data_345c = 0
data_3404 = 0

# data_3420 = [
#     0x7E0AD9FC, 0x7F0FB626, 0x7E0BD9FC, 0x7F0FB63D, 0x7E0CD9FC,
#     0x7F0FB634, 0x7E0EDD23, 0x7F0FB632, 0x7F0EB637, 0x7F0FB607,
#     0x7E06C6B1, 0x7F0FB636, 0x7FF0C6B1, 0x7F0FB636, 0x7E0DC6B1,
# ]

data_3420 = [0] * 15

data_2920 = [
    0x5075, 0x4AC5, 0x724A, 0x458C, 0x7194, 0x704A, 0x613A, 0x7133, 0x6654, 0x7C59,
    0x6800, 0x60C6, 0x49E4, 0x7164, 0x5DE1, 0x5981, 0x5B8C, 0x6496, 0x67AB, 0x5494,
    0x7A40, 0x57AE, 0x407A, 0x55BD, 0x58E9, 0x760D, 0x7325, 0x73B1, 0x4071, 0x59EE,
    0x5A8B, 0x783D, 0x5D45, 0x71F3, 0x7BB1, 0x67A6, 0x7D9F, 0x5837, 0x6B85, 0x7024,
    0x79F0, 0x4306, 0x7CF4, 0x7DBE, 0x5CC3, 0x5318, 0x531E, 0x6097, 0x7520, 0x62D7,
    0x5B95, 0x5A4F, 0x5A73, 0x66EA, 0x6715, 0x781B, 0x7114, 0x7ABA, 0x534B, 0x7C0E,
    0x78BF, 0x4966, 0x5340, 0x620B, 0x574C, 0x6341, 0x72AD, 0x56A4, 0x5C24, 0x707A,
    0x46D5, 0x6418, 0x55D4, 0x5B69, 0x60F5, 0x7A89, 0x6263, 0x7B1D, 0x4D80, 0x70A4,
    0x513A, 0x4F0F, 0x5FCB, 0x785E, 0x5DD0, 0x4622, 0x52EB, 0x4133, 0x7652, 0x5B5F,
    0x5002, 0x60F6, 0x7CE0, 0x77BB, 0x6D04, 0x58A2, 0x789B, 0x791B, 0x7C03, 0x4E0A,
    0x638A, 0x4883, 0x75BF, 0x6C8C, 0x6822, 0x66B7, 0x5ACC, 0x69CE, 0x6758, 0x5EBB,
    0x6FE7, 0x58FF, 0x6B44, 0x4AF3, 0x5AD4, 0x5E0E, 0x4B03, 0x668B, 0x46C1, 0x4C56,
    0x5FD5, 0x411A, 0x5DE6, 0x7FE8, 0x6FFE, 0x76E6, 0x670B, 0x489F, 0x759D, 0x678D,
    0x51D3, 0x6C30, 0x59A1, 0x6B96, 0x7D80, 0x6348, 0x54AB, 0x4BBD, 0x69CD, 0x72C4,
    0x4EC3, 0x526E, 0x78D8, 0x788E, 0x4736, 0x5590, 0x422A, 0x40C3, 0x50A1, 0x6B9F,
    0x58D4, 0x605A, 0x41C4, 0x5B0A, 0x6C0D, 0x678A, 0x6FCF, 0x7478, 0x4EC6, 0x72DD,
    0x5DAE, 0x755E, 0x4BA5, 0x615E, 0x4A55, 0x7EC0, 0x449F, 0x4304, 0x48F6, 0x6FB2,
    0x4D39, 0x6FD7, 0x64A9, 0x7A4D, 0x5F89, 0x77A1, 0x5541, 0x7473, 0x42D8, 0x7A8A,
    0x6301, 0x5F0D, 0x5DC5, 0x7B76, 0x78DE, 0x53C1, 0x7787, 0x596E, 0x465F, 0x4E1A,
    0x6CFD, 0x68F4, 0x55BC, 0x6BDE, 0x5B99, 0x5329, 0x4C84, 0x4DF3, 0x6DE5, 0x4138,
    0x7B15, 0x666B, 0x4DEA, 0x6CF7, 0x7058, 0x6F83, 0x6E9B, 0x40E6, 0x6596, 0x42E9,
    0x60C1, 0x6020, 0x4532, 0x4512, 0x4864, 0x44BD, 0x723F, 0x7075, 0x6983, 0x7491,
    0x7F80, 0x4464, 0x6C0E, 0x5BFC, 0x734A,
]

data_33c0 = [
    0x00DD, 0xBFB6, 0x3094, 0x99FF, 0xAC7C, 0x63B9, 0x56A3, 0x2A9A, 0x3DDF, 0x6A1D,
    0xB289, 0xD716, 0xE29D, 0x1BA9, 0x37E4, 0x0088, 0xBFA8, 0x30C1, 0x99EC, 0xAC36,
    0x63B0, 0x56F7, 0x2AB1, 0x3DCA, 0x6A08, 0xB2CE, 0xD705, 0xE2F1, 0x1BF4, 0x37E9,
]
# data_33c0 = [0] * 30
# data_33c0 = [
#                     0x55aa, 0x55aa, 0xddaa, 0xdd77, 0xdd77, 0xdd77,
#     0xdd77, 0xdd77, 0xdd77, 0xdd77, 0x1877, 0x1818, 0x1818, 0x1818,
#     0x1818, 0x1818, 0x1818, 0x1818, 0x1818, 0x1818, 0x1818, 0x1818,
#     0x18f8, 0x1818, 0x1818, 0x1818, 0x1818, 0x0030, 0x3810, 0xc66c,
# ]

def try_time(time):
    global data_345c, data_3404
    data_345c = time
    data_3404 = 0x41c64e6d

def sub_1012():
    global data_3404
    data_3404 = (data_3404 * data_345c + 12345678) & 0xffffffff
    return data_3404

def main():
    count = 0
    for time in range(58379):
        result = [0] * 15
        # time = 0x25b3
        try_time(time)
        try_data_3420 = deepcopy(data_3420)
        for i in range(15):
            result[i] = sub_1012()
        for i in range(15):
            for j in range(15):
                try_data_3420[i] = (try_data_3420[i] + (result[j] * data_2920[i * 15 + j]) & 0xffff) & 0xffff
        flag = bytearray()
        flag2 = bytearray()
        for i in range(30):
            # flag.append((try_data_3420[i % 15]) & 0xff)
            flag.append((try_data_3420[i % 15] ^ data_33c0[i]) & 0xff)
        t = bytearray()
        for i in try_data_3420:
            t.append(i & 0xff)
            t.append((i >> 8) & 0xff)
        if b"flag" in flag:
            print(time)
            print(flag)
            count += 1
    print(count)
    pass

if __name__ == '__main__':
    main()